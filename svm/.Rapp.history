iles directory#
    FDIR = "data_files"
heatmaps of differences
write.matrix(diff_mat, file = paste(OUTDIR, "dat2.csv", sep="/"), sep=",")
s1 = "hello"
s2 = "world"
paste(s1, s2)
paste(s1, s2, sep="")
s3 = 'cat'
paste(s1, s2,s3 sep="")
paste(s1, s2,s3, sep="")
library("biom")
raw_dat = read_biom("data/Subramanian_et_al_otu_table.biom")
dat_mat = biom_data(raw_dat)
rownames(dat_mat)
length(rownames(dat_mat))
colnames(dat_mat)
singletons_dat = read_biom("data/only_Healthy_Singletons_d2000.biom")#
singletons_mat = biom_data(singletons_dat)
singletons_mat
length(rownames)
rownames(singletons_mat)
rownames(biom_data)
rownames(dat_mat)
singletons_10_dat = read_biom("data/only_Healthy_Singletons_onetenthpercent_d2000.biom")#
s_mat = biom_data(singletons_10_dat)
rownames(s_mat)
rownames(singletons_mat)
colnames(s_mat)
colnames(singletons_mat)
map_mat = read.table("data/Subramanian_et_al_mapping_file.txt", header=FALSE, row.names=1, sep="\t")#
#
colnames(map_mat) <- c("BarcodeSequence", "LinkerPrimerSequence", "PersonID", "FamilyID", "ENA.SampleID", #
    "ENA.LibraryName", "Health_Analysis_Groups", "tax_id", "scientific_name", "common_name", "anonymized_name",#
    "sample_title", "sample_description", "investigation type", "project name", "target gene",#
    "sequencing method", "collection date", "host subject id", "age_in_months", "sex", "environmental package",#
    "geographic location_latitude", "geographic location_longitude", "geographic location_country",#
    "environment_biome", "environment_feature", "environment_material", "Description")
single_df = data.frame(t(as.matrix(single_mat)), check.names=FALSE)#
map_df = data.frame(map_mat)
singletons_dat = read_biom("data/only_Healthy_Singletons_onetenthpercent_d2000.biom")
single_mat = biom_data(singletons_dat)
single_df = data.frame(t(as.matrix(single_mat)), check.names=FALSE)
single_df
single_df(, "Bgsng7035.m1")
single_df[, "Bgsng7035.m1"]
single_df[, "Bgsng7204.m10"]
single_df[, Bgsng7204.m10]
single_df["Bgsng7204.m10",]
single_df["Bgsng7035.m1",]
single_df["h37B.1",]
rownames(single_df)
rownames(map_df)
dat_df$id <- rownames(dat_df) #
map_df$id <- rownames(map_df)
single_df$id <- rownames(single_df)
tot_mat <- merge(dat_df, map_df,by="id")
tot_mat <- merge(single_df, map_df,by="id")
tot_mat
rownames(single_df)
rownames(map_df)
rownames(tot_mat)
tot_mat$id
library("e1071")
tot_mat$age_factor <- factor(tot_mat$age_in_months)
colnames(tot_mat)
heads = colnames(tot_mat)#
otu_lst = heads[2:79598]
sub_lst <- append(otu_lst, "age_factor")
sub_lst
heads=colnames(tot_mat)
heads
heads
otu_lst = heads[2:82]
otu_lst
sub_lst <- append(otu_lst, "age_factor")
sub_singletons_mat <- subset(tot_mat, Health_Analysis_Groups == "Healthy Singletons", select=sub_lst)
colnames(tot_mat)
tot_mat$Health_Analysis_Groups
sub_singletons_mat <- subset(tot_mat, select=sub_lst) # Health_Analysis_Groups == "Healthy Singletons",
sub_singletons_mat
svm_model <- svm(age_factor ~ ., data = sub_singletons_mat, type='C-classification', scale=FALSE)
rarefied_dat = read_biom("data/otu_table_over_onetenthpercent.biom") # one-tenth percent rarefied
rarefied_mat = biom_data(singletons_dat)
rarefied_df = data.frame(t(as.matrix(single_mat)), check.names=FALSE)
rarefied_dat = read_biom("data/otu_table_over_onetenthpercent.biom") # one-tenth percent rarefied
rarefied_mat = biom_data(rarefied_dat)
rarefied_df = data.frame(t(as.matrix(rarefied_mat)), check.names=FALSE)
rarefied_df$Health_Analysis_Groups
rarefied_df
rarefied_df$id <- rownames(rarefied_df)
tot_mat <- merge(single_df, map_df,by="id")
all_mat <- merge(single_df, map_df,by="id")
all_mat
all_mat$Healthy_Analysis_Groups
colnames(all_mat)
all_mat$Health_Analysis_Groups
all_mat <- merge(rarefied_df, map_df,by="id")
all_mat$Health_Analysis_Groups
all_mat$age_in_months
h_singletons_mat <- subset(all_mat, Health_Analysis_Groups == "Healthy Singletons")
h_singletons_mat$Health_Analysis_Groups
levels(h_singletons_mat$Health_Analysis_Groups)
h_tt_mat <- subset(all_mat, Health_Analysis_Groups == "Healthy Twins Triplets")
h_tt_mat
h_tt_mat$Health_Analysis_Groups
sub_col_lst <- append(otu_lst, "age_factor")
sub_singletons_mat <- subset(h_singletons_mat, select=sub_col_lst) # Health_Analysis_Groups == "Healthy Singletons",
svm_model <- svm(age_factor ~ ., data = sub_singletons_mat, type='C-classification', scale=FALSE)
svm_model
print(svm_model)
summary(model)
summary(svm_model)
sub_col_st
sub_col_lst
support_vecs = subset(sub_singletons_mat, select = -age_factor)
support_vecs
colnames(support_vecs)
age_mat = sub_singletons_mat$age_factor
age_mat
svm_model <- svm(age_mat ~ support_vecs, data = sub_singletons_mat, type='C-classification', scale=FALSE)
svm_model <- svm(age_mat, support_vecs, type='C-classification', scale=FALSE)
svm_model <- svm(support_vecs, age_mat, type='C-classification', scale=FALSE)
summary(svm_model)
sing_pred <- predict(svm_model, support_vecs)
sing_pred
plot(sing_pred, age-mat)
plot(sing_pred, age_mat)
sing_pred_nums <- as.numeric(as.character(sing_pred))#
sing_actual_nums <- as.numeric(as.character(age_mat))
sing_pred_Nums
sing_pred_nums
plot(sing_pred_nums, sing_actual_nums)
sing_pred <- predict(svm_model, support_vecs)
sing_pred_nums <- as.numeric(as.character(sing_pred))
sing_actual_nums <- as.numeric(as.character(age_mat))
plot(sing_pred_nums, sing_actual_nums)
sub_tt_mat <- subset(h_tt_mat, select=sub_col_lst)#
tt_train <- subset(sub_tt_mat, select= -age_factor)#
tt_age <- sub_tt_mat$age_factor#
#
tt_pred <- predict(svm_model, tt_train)#
#
tt_pred_nums <- as.numeric(as.character(tt_pred))#
tt_actual_nums <- as.numeric(as.character(tt_age))
sub_tt_mat <- subset(h_tt_mat, select=sub_col_lst)
h_tt_mat <- subset(all_mat, Health_Analysis_Groups == "Healthy Twins Triplets")
sub_tt_mat <- subset(h_tt_mat, select=sub_col_lst)
sub_col_lst <- append(otu_lst, "age_factor")
sub_tt_mat <- subset(h_tt_mat, select=sub_col_lst)
h_tt_mat
colnames(h_tt_mat)
all_mat$age_factor <- factor(all_mat$age_in_months)
h_tt_mat <- subset(all_mat, Health_Analysis_Groups == "Healthy Twins Triplets")
colnames(h_tt_mat)
sub_tt_mat <- subset(h_tt_mat, select=sub_col_lst)
tt_train <- subset(sub_tt_mat, select= -age_factor)#
tt_age <- sub_tt_mat$age_factor#
#
tt_pred <- predict(svm_model, tt_train)#
#
tt_pred_nums <- as.numeric(as.character(tt_pred))#
tt_actual_nums <- as.numeric(as.character(tt_age))
plot(tt_actual_nums, tt_pred_nums)
tt_pred_nums
tt_actual_nums
predict same singleton data#
sing_pred <- predict(svm_model, single_train)#
#
sing_pred_nums <- as.numeric(as.character(sing_pred))#
sing_actual_nums <- as.numeric(as.character(single_age))
single_train = subset(sub_singletons_mat, select = -age_factor)#
single_age = sub_singletons_mat$age_factor
predict same singleton data#
sing_pred <- predict(svm_model, single_train)#
#
sing_pred_nums <- as.numeric(as.character(sing_pred))#
sing_actual_nums <- as.numeric(as.character(single_age))
sing_pred
single_age
single_train
svm_model
colnames(support_vecs)
write.table(all_mat, "all_mat.csv")
svm_model <- svm(single_age, single_train, type='C-classification', scale=FALSE)
plot(sing_pred_nums, sing_actual_nums)
plot(tt_actual_nums, tt_pred_nums)
write.table(all_mat, "all_mat.csv", sep=",")
all_mat
h_tt_mat$id
att_mat$id
all_mat$id
row_names(all_mat)
rownames(all_mat)
colnames(all_mat)
otu_mat <- subset(all_mat, select=otu_lst)
otu_mat
write.table(all_mat, "all_mat.csv", sep=",", row.names=FALSE)
write.table(h_singletons_mat, "singletons.csv", sep=",", row.names=FALSE)#
write.table(h_tt_mat, "twins.csv", sep=",", row.names=FALSE)
levels(all_mat$Health_Analysis_Groups)
length(h_singletons_mat$Health_Analysis_Groups)
colnames(all_mat)
all_mat$investigation.type
colnames(all_mat)
all_mat
h_singletons_mat
h_singletons_mat$PersonID
unique(h_singletons_mat$PersonID)
levels(all_mat$Health_Analysis_Groups)
